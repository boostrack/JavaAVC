package org.javaavc.gen.avfilter;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import org.javaavc.gen.avfilter.LibavfilterLibrary.AVFilterCommand;
/**
 * An instance of a filter<br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVFilterContext extends Structure {
	/**
	 * < needed for av_log()<br>
	 * C type : const AVClass*
	 */
	public Pointer av_class;
	/**
	 * < the AVFilter of which this is an instance<br>
	 * C type : AVFilter*
	 */
	public org.javaavc.gen.avfilter.AVFilter.ByReference filter;
	/**
	 * < name of this filter instance<br>
	 * C type : char*
	 */
	public Pointer name;
	/**
	 * < array of input pads<br>
	 * C type : AVFilterPad*
	 */
	public org.javaavc.gen.avfilter.AVFilterPad.ByReference input_pads;
	/**
	 * < array of pointers to input links<br>
	 * C type : AVFilterLink**
	 */
	public org.javaavc.gen.avfilter.AVFilterLink.ByReference[] inputs;
	/** < @deprecated use nb_inputs */
	public int input_count;
	/** < number of input pads */
	public int nb_inputs;
	/**
	 * < array of output pads<br>
	 * C type : AVFilterPad*
	 */
	public org.javaavc.gen.avfilter.AVFilterPad.ByReference output_pads;
	/**
	 * < array of pointers to output links<br>
	 * C type : AVFilterLink**
	 */
	public org.javaavc.gen.avfilter.AVFilterLink.ByReference[] outputs;
	/** < @deprecated use nb_outputs */
	public int output_count;
	/** < number of output pads */
	public int nb_outputs;
	/**
	 * < private data for use by the filter<br>
	 * C type : void*
	 */
	public Pointer priv;
	/** C type : AVFilterCommand* */
	public AVFilterCommand command_queue;
	public AVFilterContext() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("av_class", "filter", "name", "input_pads", "inputs", "input_count", "nb_inputs", "output_pads", "outputs", "output_count", "nb_outputs", "priv", "command_queue");
	}
	public static class ByReference extends AVFilterContext implements Structure.ByReference {
		
	};
	public static class ByValue extends AVFilterContext implements Structure.ByValue {
		
	};
}
