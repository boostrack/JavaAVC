package org.javaavc.ffmpeg.avfilter;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVFilterBufferRefAudioProps extends Structure {
	/** < channel layout of audio buffer */
	public long channel_layout;
	/** < number of audio samples per channel */
	public int nb_samples;
	/** < audio buffer sample rate */
	public int sample_rate;
	/** < number of channels (do not access directly) */
	public int channels;
	public AVFilterBufferRefAudioProps() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("channel_layout", "nb_samples", "sample_rate", "channels");
	}
	/**
	 * @param channel_layout < channel layout of audio buffer<br>
	 * @param nb_samples < number of audio samples per channel<br>
	 * @param sample_rate < audio buffer sample rate<br>
	 * @param channels < number of channels (do not access directly)
	 */
	public AVFilterBufferRefAudioProps(long channel_layout, int nb_samples, int sample_rate, int channels) {
		super();
		this.channel_layout = channel_layout;
		this.nb_samples = nb_samples;
		this.sample_rate = sample_rate;
		this.channels = channels;
	}
	public static class ByReference extends AVFilterBufferRefAudioProps implements Structure.ByReference {
		
	};
	public static class ByValue extends AVFilterBufferRefAudioProps implements Structure.ByValue {
		
	};
}
